{
	"info": {
		"_postman_id": "7547b92f-b0b8-4ad4-827e-5863e64c462e",
		"name": "ISIS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Market",
			"item": [
				{
					"name": "Test Connectivity",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is lower than limit\", () => {\r",
									"    //time limit in ms\r",
									"    var limit = 1000;\r",
									"\r",
									"    pm.expect(pm.response.responseTime).to.be.below(limit);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/api/v3/ping",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v3",
								"ping"
							]
						}
					},
					"response": []
				},
				{
					"name": "Order Book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Content-Type header is present\", () => {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Length header is present\", () => {\r",
									"    pm.response.to.have.header(\"Content-Length\");\r",
									"});\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"if (pm.collectionVariables.get(\"lastUpdateId\"))\r",
									"    pm.test(\"lastUpdateId increased\", () => {\r",
									"        const responseJson = pm.response.json();\r",
									"\r",
									"        pm.expect(responseJson.lastUpdateId).greaterThan(parseInt(pm.collectionVariables.get(\"lastUpdateId\")));\r",
									"\r",
									"        pm.collectionVariables.set(\"lastUpdateId\", responseJson.lastUpdateId);\r",
									"    });\r",
									"else\r",
									"{\r",
									"    pm.test.skip(\"lastUpdateId increased\");\r",
									"    pm.collectionVariables.set(\"lastUpdateId\", responseJson.lastUpdateId);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/api/v3/depth?symbol=BTCUSDT&limit=5",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v3",
								"depth"
							],
							"query": [
								{
									"key": "symbol",
									"value": "BTCUSDT"
								},
								{
									"key": "limit",
									"value": "5",
									"description": "Default 100; max 1000. Valid limits:[5, 10, 20, 50, 100, 500, 1000, 5000]"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "endpoint",
			"value": "https://api.binance.com"
		},
		{
			"key": "lastUpdateId",
			"value": ""
		}
	]
}
